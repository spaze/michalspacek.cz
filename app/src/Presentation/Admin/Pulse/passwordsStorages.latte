{define #menu}
&raquo; <a n:href=":Www:Homepage:">Michal Špaček</a>
&raquo; <a n:href="Homepage:">Administrace</a>
&raquo; <a n:href="Pulse:">Pulse</a>
{/define}

{define #form}
{form addPasswordsStorageAlgorithm class => "aligned wide"}
<fieldset id="chyby" n:if="$form->hasErrors()">
	<legend><strong>Errors</strong></legend>
	<ul>
		<li n:foreach="$form->errors as $error"><strong>{$error}</strong></li>
	</ul>
</fieldset>
<table>
<tbody>
{formContainer company}
	<tr><th>{label id /}</th><td>{input id}</td></tr>
	<tr><td></td><td><small><a href="#newcompany" data-parent="#{$form[company][id]->getHtmlId()}"><span>or add a new one</span><span class="hidden">cancel adding</span></a></small></td></tr>
	<tr>
		<td></td>
		<td>
			<table id="newcompany" n:class="!$form[company]->values->new->name ? hidden">
			{formContainer new}
				<tr><th>{label name /}</th><td>{input name}</td></tr>
				<tr><th>{label dba /}</th><td>{input dba}</td></tr>
				<tr><th>{label alias /}</th><td>{input alias}</td></tr>
			{/formContainer}
			</table>
		</td>
	</tr>
{/formContainer}
{formContainer site}
	<tr><th>{label id /}</th><td>{input id}</td></tr>
	<tr><td></td><td><small><a href="#newsite" data-parent="#{$form[site][id]->getHtmlId()}"><span>or add a new one</span><span class="hidden">cancel adding</span></a></small></td></tr>
	<tr id="newsite" n:class="!$form[site]->values->new->url && !$form[site]->values->new->alias ? hidden">
		<td></td>
		<td>
			<table>
			{formContainer new}
				<tr><th>{label url /}</th><td>{input url}</td></tr>
				<tr><th>{label alias /}</th><td>{input alias}</td></tr>
				<tr>
					<th>{label sharedWith /}</th>
					<td>
						{input sharedWith}<br>
						<small><code>[{"url":"https://example.com/","alias": "example.com"},{"url":"https://example.net/bar","alias":"example.net/bar"}]</code></small>
					</td>
				</tr>
			{/formContainer}
			</table>
		</td>
	</tr>
{/formContainer}
{formContainer algo}
	<tr><th>{label id /}</th><td>{input id}</td></tr>
	<tr><td></td><td><small><a href="#newalgo" data-parent="#{$form[algo][id]->getHtmlId()}"><span>or add a new one</span><span class="hidden">cancel adding</span></a></small></td></tr>
	<tr id="newalgo" n:class="!$form[algo]->values->new->algoName && !$form[algo]->values->new->alias ? hidden">
		<td></td>
		<td>
			<table>
			{formContainer new}
				<tr>
					<th>{label algoName /}</th><td class="short">{input algoName}</td>
					<th>{label salted: /}</th><td>{input salted:}</td>
				</tr>
				<tr>
					<th>{label alias /}</th><td class="short">{input alias}</td>
					<th>{label stretched: /}</th><td>{input stretched:}</td>
				</tr>
			{/formContainer}
			</table>
		</td>
	</tr>
	<tr><th>{label from /}</th><td>{input from} {input fromConfirmed}</td></tr>
	<tr><th>{label attributes /}</th><td>{input attributes}</td></tr>
	<tr><th>{label note /}</th><td>{input note}</td></tr>
{/formContainer}
</tbody>
{formContainer disclosure}
{for $i = 0; $i < $newDisclosures; $i++}
	<tr n:if="$i != 0"><td></td><td><small><a href="#newdisclosure-{$i}"><span>add {$i + 1}. disclosure</span><span class="hidden">cancel adding</span></a></small></td></tr>
	<tbody id="newdisclosure-{$i}" n:class="$i != 0 ? hidden">
	{formContainer new}
		{formContainer "$i"}
			<tr><th>{label disclosureType /}</th><td>{input disclosureType}</td></tr>
			<tr><th>{label url /}</th><td>{input url}</td></tr>
			<tr><th>{label archive /}</th><td>{input archive}</td></tr>
			<tr><th>{label note /}</th><td>{input note}</td></tr>
			<tr><th>{label published /}</th><td>{input published}</td></tr>
		{/formContainer}
	{/formContainer}
	</tbody>
{/for}
{/formContainer}
<tr><td></td><td class="short"><p>{input submit}</p></td></tr>
</table>
{/form}
{/define}

{define #content}
<div n:foreach="$flashes as $flash" class="flash {$flash->type}"><strong>{$flash->message}</strong></div>
<div id="pridat-storage">
	<p><a href="#pridat-storage" class="open-container block">Přidat password storage</a></p>
	<div id="pridat-storage-container" class="hidden">
	{include #form, form: addPasswordsStorageAlgorithm}
	</div>
</div>
<hr>

{/define}
